;; Auto-generated. Do not edit!


(when (boundp 'ist_building_msgs::RoomExplorationResult)
  (if (not (find-package "IST_BUILDING_MSGS"))
    (make-package "IST_BUILDING_MSGS"))
  (shadow 'RoomExplorationResult (find-package "IST_BUILDING_MSGS")))
(unless (find-package "IST_BUILDING_MSGS::ROOMEXPLORATIONRESULT")
  (make-package "IST_BUILDING_MSGS::ROOMEXPLORATIONRESULT"))

(in-package "ROS")
;;//! \htmlinclude RoomExplorationResult.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass ist_building_msgs::RoomExplorationResult
  :super ros::object
  :slots (_coverage_path _coverage_path_pose_stamped ))

(defmethod ist_building_msgs::RoomExplorationResult
  (:init
   (&key
    ((:coverage_path __coverage_path) (let (r) (dotimes (i 0) (push (instance geometry_msgs::Pose2D :init) r)) r))
    ((:coverage_path_pose_stamped __coverage_path_pose_stamped) (let (r) (dotimes (i 0) (push (instance geometry_msgs::PoseStamped :init) r)) r))
    )
   (send-super :init)
   (setq _coverage_path __coverage_path)
   (setq _coverage_path_pose_stamped __coverage_path_pose_stamped)
   self)
  (:coverage_path
   (&rest __coverage_path)
   (if (keywordp (car __coverage_path))
       (send* _coverage_path __coverage_path)
     (progn
       (if __coverage_path (setq _coverage_path (car __coverage_path)))
       _coverage_path)))
  (:coverage_path_pose_stamped
   (&rest __coverage_path_pose_stamped)
   (if (keywordp (car __coverage_path_pose_stamped))
       (send* _coverage_path_pose_stamped __coverage_path_pose_stamped)
     (progn
       (if __coverage_path_pose_stamped (setq _coverage_path_pose_stamped (car __coverage_path_pose_stamped)))
       _coverage_path_pose_stamped)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Pose2D[] _coverage_path
    (apply #'+ (send-all _coverage_path :serialization-length)) 4
    ;; geometry_msgs/PoseStamped[] _coverage_path_pose_stamped
    (apply #'+ (send-all _coverage_path_pose_stamped :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Pose2D[] _coverage_path
     (write-long (length _coverage_path) s)
     (dolist (elem _coverage_path)
       (send elem :serialize s)
       )
     ;; geometry_msgs/PoseStamped[] _coverage_path_pose_stamped
     (write-long (length _coverage_path_pose_stamped) s)
     (dolist (elem _coverage_path_pose_stamped)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Pose2D[] _coverage_path
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _coverage_path (let (r) (dotimes (i n) (push (instance geometry_msgs::Pose2D :init) r)) r))
     (dolist (elem- _coverage_path)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;; geometry_msgs/PoseStamped[] _coverage_path_pose_stamped
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _coverage_path_pose_stamped (let (r) (dotimes (i n) (push (instance geometry_msgs::PoseStamped :init) r)) r))
     (dolist (elem- _coverage_path_pose_stamped)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get ist_building_msgs::RoomExplorationResult :md5sum-) "12d0bcf4cde501321f572592c0c514da")
(setf (get ist_building_msgs::RoomExplorationResult :datatype-) "ist_building_msgs/RoomExplorationResult")
(setf (get ist_building_msgs::RoomExplorationResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# result definition
geometry_msgs/Pose2D[] coverage_path			# when the server should return the coverage path, this is done returning the points in an array that shows the order of visiting
geometry_msgs/PoseStamped[] coverage_path_pose_stamped			# (same content as coverage_path but different format) when the server should return the coverage path, this is done returning the points in an array that shows the order of visiting

================================================================================
MSG: geometry_msgs/Pose2D
# Deprecated
# Please use the full 3D pose.

# In general our recommendation is to use a full 3D representation of everything and for 2D specific applications make the appropriate projections into the plane for their calculations but optimally will preserve the 3D information during processing.

# If we have parallel copies of 2D datatypes every UI and other pipeline will end up needing to have dual interfaces to plot everything. And you will end up with not being able to use 3D tools for 2D use cases even if they're completely valid, as you'd have to reimplement it with different inputs and outputs. It's not particularly hard to plot the 2D pose or compute the yaw error for the Pose message and there are already tools and libraries that can do this for you.


# This expresses a position and orientation on a 2D manifold.

float64 x
float64 y
float64 theta

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :ist_building_msgs/RoomExplorationResult "12d0bcf4cde501321f572592c0c514da")


