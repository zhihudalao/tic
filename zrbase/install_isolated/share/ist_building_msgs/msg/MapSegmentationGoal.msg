# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Map Segmentation action
# Provides interface to get the segmented map

# goal definition
sensor_msgs/Image input_map				# the action server need a map as a input image to segment it, IMPORTANT: The algorithm needs a black and white 8bit single-channel image (format 8UC1), which is 0 (black) for obstacles and 255 (white) for free space
float32 map_resolution					# the resolution of the map in [meter/cell]
geometry_msgs/Pose map_origin			# the origin of the map in [meter]
bool return_format_in_pixel				# return room data (see below) in [pixel]
bool return_format_in_meter				# return room data (see below) in [meter]
float32 robot_radius					# in [meter]; if this variable is set to a value greater than 0, the room centers are chosen at locations that are reachable from neighboring rooms (i.e. not inside the legs of a table surrounded by chairs)
int32 room_segmentation_algorithm		# optionally overrides the parameterized segmentation method (if -1 it just takes the preset)
										#  0 = take the preset (parameterized) method
										#  1 = MorphologicalSegmentation
										#  2 = DistanceSegmentation
										#  3 = VoronoiSegmentation
										#  4 = SemanticSegmentation
										#  5 = RandomFieldSegmentation
										# 99 = PassThrough (just get a pre-segmented map into the right output format)

