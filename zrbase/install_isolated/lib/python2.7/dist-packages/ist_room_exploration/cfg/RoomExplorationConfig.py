## *********************************************************
##
## File autogenerated for the ist_room_exploration package
## by the dynamic_reconfigure package.
## Please do not edit.
##
## ********************************************************/

from dynamic_reconfigure.encoding import extract_params

inf = float('inf')

config_description = {'upper': 'DEFAULT', 'lower': 'groups', 'srcline': 245, 'name': 'Default', 'parent': 0, 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'cstate': 'true', 'parentname': 'Default', 'class': 'DEFAULT', 'field': 'default', 'state': True, 'parentclass': '', 'groups': [], 'parameters': [{'srcline': 290, 'description': 'Exploration method', 'max': 8, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'room_exploration_algorithm', 'edit_method': "{'enum_description': 'Exploration algorithm', 'enum': [{'srcline': 9, 'description': 'Use the grid point exploration algorithm.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'GridPointExplorator'}, {'srcline': 10, 'description': 'Use the boustrophedon exploration algorithm.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'BoustrophedonExplorator'}, {'srcline': 11, 'description': 'Use the neural network exploration algorithm.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'NeuralNetworkExplorator'}, {'srcline': 12, 'description': 'Use the convexSPP exploration algorithm.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'ConvexSPPExplorator'}, {'srcline': 13, 'description': 'Use the flowNetwork exploration algorithm.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 5, 'ctype': 'int', 'type': 'int', 'name': 'FlowNetworkExplorator'}, {'srcline': 14, 'description': 'Use the energyFunctional exploration algorithm.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 6, 'ctype': 'int', 'type': 'int', 'name': 'EnergyFunctionalExplorator'}, {'srcline': 15, 'description': 'Use the voronoi exploration algorithm.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 7, 'ctype': 'int', 'type': 'int', 'name': 'VoronoiExplorator'}, {'srcline': 16, 'description': 'Use a variant of the boustrophedon exploration algorithm.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 8, 'ctype': 'int', 'type': 'int', 'name': 'BoustrophedonVariantExplorator'}]}", 'default': 2, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 290, 'description': 'Applies a closing operation to neglect inaccessible areas and map errors/artifacts if the map_correction_closing_neighborhood_size parameter is larger than 0. The parameter then specifies the iterations (or neighborhood size) of that closing operation..', 'max': 100, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'map_correction_closing_neighborhood_size', 'edit_method': '', 'default': 2, 'level': 0, 'min': -1, 'type': 'int'}, {'srcline': 290, 'description': 'Boolean used to determine whether the server should return the computed coverage path in the response message.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'return_path', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 290, 'description': 'Boolean used to determine whether the server should navigate the robot along the computed coverage path.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'execute_path', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 290, 'description': 'Distance from robot to published goal to publish the next goal in the path.', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'goal_eps', 'edit_method': '', 'default': 0.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 290, 'description': "Use a dynamic goal distance criterion: the larger the path's curvature, the more accurate the navigation.", 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'use_dyn_goal_eps', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 290, 'description': 'Interrupt the publishing of navigation goals as long as needed.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'interrupt_navigation_publishing', 'edit_method': '', 'default': False, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 290, 'description': 'Revisiting not seen areas due to dynamic obstacles on/off.', 'max': True, 'cconsttype': 'const bool', 'ctype': 'bool', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'revisit_areas', 'edit_method': '', 'default': True, 'level': 0, 'min': False, 'type': 'bool'}, {'srcline': 290, 'description': 'Minimal size of left sections to revisit them after one go [m^2].', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'left_sections_min_area', 'edit_method': '', 'default': 0.01, 'level': 0, 'min': 1e-07, 'type': 'double'}, {'srcline': 290, 'description': 'The name of the global costmap topic.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'global_costmap_topic', 'edit_method': '', 'default': '/move_base/global_costmap/costmap', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 290, 'description': 'The name of the service to call for a coverage check of the driven trajectory.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'coverage_check_service_name', 'edit_method': '', 'default': '/room_exploration/coverage_check_server/coverage_check', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 290, 'description': 'The name of the map frame, used for tracking of the robot.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'map_frame', 'edit_method': '', 'default': 'map', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 290, 'description': 'The name of the camera frame, that is in the same kinematic chain as the map_frame and shows the camera pose.', 'max': '', 'cconsttype': 'const char * const', 'ctype': 'std::string', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'camera_frame', 'edit_method': '', 'default': 'base_link', 'level': 0, 'min': '', 'type': 'str'}, {'srcline': 290, 'description': 'Exploration method', 'max': 3, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'tsp_solver', 'edit_method': "{'enum_description': 'Indicates which TSP solver should be used.', 'enum': [{'srcline': 59, 'description': 'Use the Nearest Neighbor TSP algorithm.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'NearestNeighborTSP'}, {'srcline': 60, 'description': 'Use the Genetic TSP solver.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'GeneticTSP'}, {'srcline': 61, 'description': 'Use the Concorde TSP solver.', 'srcfile': '/home/ubuntu/zrbase/src/caei/ist_exploration/ist_room_exploration/cfg/RoomExploration.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'ConcordeTSP'}]}", 'default': 3, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 290, 'description': 'A sophisticated solver like Concorde or Genetic can be interrupted if it does not find a solution within this time (in [s]), and then falls back to the nearest neighbor solver.', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'tsp_solver_timeout', 'edit_method': '', 'default': 600, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 290, 'description': 'Minimum area of one cell for the boustrophedon explorator.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'min_cell_area', 'edit_method': '', 'default': 10.0, 'level': 0, 'min': 1e-07, 'type': 'double'}, {'srcline': 290, 'description': 'Minimum area of one cell for the boustrophedon explorator.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'max_cell_area', 'edit_method': '', 'default': 10.0, 'level': 0, 'min': 1e-07, 'type': 'double'}, {'srcline': 290, 'description': 'Minimal distance between two points on the generated path [pixel].', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'path_eps', 'edit_method': '', 'default': 2.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 290, 'description': 'Allows to displace the grid by more than the standard half_grid_size from obstacles [m].', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'grid_obstacle_offset', 'edit_method': '', 'default': 0.0, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 290, 'description': 'Step size for integrating the state dynamics of the neural network.', 'max': 1.0, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'step_size', 'edit_method': '', 'default': 0.008, 'level': 0, 'min': 0.0001, 'type': 'double'}, {'srcline': 290, 'description': 'Decaying parameter that pulls the activity of a neuron closer to zero, larger value means faster decreasing.', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'A', 'edit_method': '', 'default': 17, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 290, 'description': 'Increasing parameter that tries to increase the activity of a neuron, higher value means a higher desired value and a faster increasing at the beginning.', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'B', 'edit_method': '', 'default': 5, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 290, 'description': 'Decreasing parameter when the neuron is labeled as obstacle, higher value means faster decreasing.', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'D', 'edit_method': '', 'default': 7, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 290, 'description': 'External input parameter of one neuron that is used in the dynamics corresponding to if it is an obstacle or uncleaned/cleaned, E>>B.', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'E', 'edit_method': '', 'default': 80, 'level': 0, 'min': 1, 'type': 'int'}, {'srcline': 290, 'description': 'Parameter to set the importance of the states of neighboring neurons to the dynamics, higher value means higher influence.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'mu', 'edit_method': '', 'default': 1.03, 'level': 0, 'min': 0.001, 'type': 'double'}, {'srcline': 290, 'description': 'Parameter to set the importance of the traveleing direction from the previous step and the next step, a higher value means that the robot should turn less.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'delta_theta_weight', 'edit_method': '', 'default': 0.15, 'level': 0, 'min': 0.0, 'type': 'double'}, {'srcline': 290, 'description': 'Side length of one grid cell, when discretizing the free space.', 'max': 2147483647, 'cconsttype': 'const int', 'ctype': 'int', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'cell_size', 'edit_method': '', 'default': 0, 'level': 0, 'min': -1, 'type': 'int'}, {'srcline': 290, 'description': 'Sampling angle when creating possible sensing poses.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'delta_theta', 'edit_method': '', 'default': 1.570796, 'level': 0, 'min': 0.0001, 'type': 'double'}, {'srcline': 290, 'description': 'Factor an arc can be longer than a straight arc.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'curvature_factor', 'edit_method': '', 'default': 1.1, 'level': 0, 'min': 1.0, 'type': 'double'}, {'srcline': 290, 'description': '#Factor, an arc can be longer than the maximal distance of the room.', 'max': inf, 'cconsttype': 'const double', 'ctype': 'double', 'srcfile': '/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py', 'name': 'max_distance_factor', 'edit_method': '', 'default': 1.0, 'level': 0, 'min': 1.0, 'type': 'double'}], 'type': '', 'id': 0}

min = {}
max = {}
defaults = {}
level = {}
type = {}
all_level = 0

#def extract_params(config):
#    params = []
#    params.extend(config['parameters'])
#    for group in config['groups']:
#        params.extend(extract_params(group))
#    return params

for param in extract_params(config_description):
    min[param['name']] = param['min']
    max[param['name']] = param['max']
    defaults[param['name']] = param['default']
    level[param['name']] = param['level']
    type[param['name']] = param['type']
    all_level = all_level | param['level']

RoomExploration_GridPointExplorator = 1
RoomExploration_BoustrophedonExplorator = 2
RoomExploration_NeuralNetworkExplorator = 3
RoomExploration_ConvexSPPExplorator = 4
RoomExploration_FlowNetworkExplorator = 5
RoomExploration_EnergyFunctionalExplorator = 6
RoomExploration_VoronoiExplorator = 7
RoomExploration_BoustrophedonVariantExplorator = 8
RoomExploration_NearestNeighborTSP = 1
RoomExploration_GeneticTSP = 2
RoomExploration_ConcordeTSP = 3
